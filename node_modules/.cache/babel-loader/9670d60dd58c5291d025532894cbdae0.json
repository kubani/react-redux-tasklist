{"ast":null,"code":"import _toConsumableArray from \"C:\\\\codebase\\\\reduxreact-sandbox\\\\redux-todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\codebase\\\\reduxreact-sandbox\\\\redux-todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux'; // Circuit 1: get textbox working\n\nvar initialState = {\n  text: '',\n  submitted: []\n};\n\nvar handleTasks = function handleTasks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ENTER_TASK':\n      return _objectSpread({}, state, {\n        text: action.payload\n      });\n    // Check logic behind submitting task; button\n\n    case 'SUBMIT_TASK':\n      return _objectSpread({}, state, {\n        submitted: [].concat(_toConsumableArray(state), [action.payload])\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n\n  ;\n};\n\nexport default combineReducers({\n  TEXAS: handleTasks\n});","map":{"version":3,"sources":["C:\\codebase\\reduxreact-sandbox\\redux-todolist\\src\\reducers\\index.js"],"names":["combineReducers","initialState","text","submitted","handleTasks","state","action","type","payload","TEXAS"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFf;AAIF;;AACA,SAAK,aAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,SAAS,+BAAME,KAAN,IAAaC,MAAM,CAACE,OAApB;AAFX;;AAIF;AAAS;AACP,eAAOH,KAAP;AACD;AAdH;;AAeC;AACF,CAjBD;;AAmBA,eAAeL,eAAe,CAAC;AAAES,EAAAA,KAAK,EAAEL;AAAT,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'; \r\n// Circuit 1: get textbox working\r\nconst initialState = {\r\n  text: '',\r\n  submitted: []\r\n};\r\n\r\nconst handleTasks = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ENTER_TASK':\r\n      return {\r\n        ...state,\r\n        text: action.payload\r\n      };\r\n    // Check logic behind submitting task; button\r\n    case 'SUBMIT_TASK':\r\n      return {\r\n        ...state,\r\n        submitted: [...state, action.payload]\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n\r\nexport default combineReducers({ TEXAS: handleTasks });\r\n"]},"metadata":{},"sourceType":"module"}
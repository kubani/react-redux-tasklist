{"ast":null,"code":"var _jsxFileName = \"C:\\\\codebase\\\\reduxreact-sandbox\\\\redux-todolist\\\\src\\\\components\\\\InputTask.js\";\n// import action you want\n// import connect\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { enterTask } from '../actions';\n\nvar InputTask = function InputTask(props) {\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}; // Jump into the state and grab/subscribe to the necessary items then return an object\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // myDude: state.action\n  return {\n    CAVS: state.enterTask\n  };\n};\n\nexport default connect(mapStateToProps)(InputTask);","map":{"version":3,"sources":["C:\\codebase\\reduxreact-sandbox\\redux-todolist\\src\\components\\InputTask.js"],"names":["React","connect","enterTask","InputTask","props","console","log","mapStateToProps","state","CAVS"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CARD,C,CAUA;;;AACA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAED,KAAK,CAACN;AAAd,GAAP;AACD,CAHD;;AAIA,eAAeD,OAAO,CAACM,eAAD,CAAP,CAAyBJ,SAAzB,CAAf","sourcesContent":["// import action you want\r\n// import connect\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { enterTask } from '../actions'\r\n\r\nconst InputTask = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <input type=\"text\"></input>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n// Jump into the state and grab/subscribe to the necessary items then return an object\r\nconst mapStateToProps = state => {\r\n  // myDude: state.action\r\n  return { CAVS: state.enterTask};\r\n}\r\nexport default connect(mapStateToProps)(InputTask);"]},"metadata":{},"sourceType":"module"}
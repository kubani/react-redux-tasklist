{"ast":null,"code":"import _toConsumableArray from \"C:\\\\codebase\\\\reduxreact-sandbox\\\\redux-todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\codebase\\\\reduxreact-sandbox\\\\redux-todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux'; // Circuit 1: get textbox working\n// Circuit 2: get array of task text with ID key\n\nvar initialState = {\n  text: '',\n  taskList: [{\n    id: 0,\n    task: ''\n  }],\n  xid: 0\n};\n\nvar taskReducer = function taskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ENTER_TASK':\n      return _objectSpread({}, state, {\n        text: action.payload\n      });\n    // Check logic behind submitting task; button\n\n    case 'SUBMIT_TASK':\n      console.log(state);\n      return _objectSpread({}, state, {\n        taskList: [].concat(_toConsumableArray(state.taskList), [{\n          id: ++state.xid,\n          task: state.text\n        }])\n      });\n\n    case 'DELETE_TASK':\n      return _objectSpread({}, state, {\n        taskList: state.taskList.filter(function (tasks, index) {\n          return tasks.id !== state.taskList.id;\n        })\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default combineReducers({\n  taskReducer: taskReducer\n});","map":{"version":3,"sources":["C:\\codebase\\reduxreact-sandbox\\redux-todolist\\src\\reducers\\index.js"],"names":["combineReducers","initialState","text","taskList","id","task","xid","taskReducer","state","action","type","payload","console","log","filter","tasks","index"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;AACA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAAD,CAFS;AAGnBC,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,+BACKF,KADL;AAEEN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAFf;AAIF;;AACA,SAAK,aAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACE,+BACKA,KADL;AAEEL,QAAAA,QAAQ,+BAAMK,KAAK,CAACL,QAAZ,IAAsB;AAACC,UAAAA,EAAE,EAAE,EAAEI,KAAK,CAACF,GAAb;AAAkBD,UAAAA,IAAI,EAAEG,KAAK,CAACN;AAA9B,SAAtB;AAFV;;AAKF,SAAK,aAAL;AACE,+BACKM,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeW,MAAf,CAAsB,UAACC,KAAD,EAAQC,KAAR;AAAA,iBAAkBD,KAAK,CAACX,EAAN,KAAaI,KAAK,CAACL,QAAN,CAAeC,EAA9C;AAAA,SAAtB;AAFZ;;AAIF;AACE,aAAOI,KAAP;AApBJ;;AAqBC;AACF,CAvBD;;AAyBA,eAAeR,eAAe,CAAC;AAAEO,EAAAA,WAAW,EAAEA;AAAf,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'; \r\n// Circuit 1: get textbox working\r\n// Circuit 2: get array of task text with ID key\r\nconst initialState = {\r\n  text: '',\r\n  taskList: [{id: 0, task: ''}],\r\n  xid: 0\r\n};\r\n\r\nconst taskReducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ENTER_TASK':\r\n      return {\r\n        ...state,\r\n        text: action.payload\r\n      };\r\n    // Check logic behind submitting task; button\r\n    case 'SUBMIT_TASK':\r\n    console.log(state);\r\n      return {\r\n        ...state,\r\n        taskList: [...state.taskList, {id: ++state.xid, task: state.text}]\r\n      };\r\n\r\n    case 'DELETE_TASK':\r\n      return {\r\n        ...state,\r\n        taskList: state.taskList.filter((tasks, index) => tasks.id !== state.taskList.id)\r\n      };\r\n    default: \r\n      return state;\r\n  };\r\n};\r\n\r\nexport default combineReducers({ taskReducer: taskReducer });\r\n"]},"metadata":{},"sourceType":"module"}